
// Mixins
//------------------------------------------------------------------------------

// Use with @extend %clearfix;
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin tile-color($color) {

  .tile {
    background: $color;

    &:hover {
      background: darken($color, 25%);
    }
  }
}

%underline-headline {
  position: relative;
  padding-bottom: 18px;
  text-align: center;

  &:after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    display: inline-block;
    width: 87px;
    height: 2px;
    background: $color-grey;
  }
}


@mixin xxlarge() {
  @media screen and (max-width: $mqXXLarge) {
    @content;
  }
}

@mixin xlarge() {
  @media screen and (min-width: $mqXLarge+1) {
    @content;
  }
}

@mixin xlarge-down() {
  @media screen and (max-width: $mqXLarge) {
    @content;
  }
}

@mixin large() {
  @media screen and (max-width: $mqLarge) {
    @content;
  }
}

@mixin medium() {
  @media screen and (max-width: $mqMedium) {
    @content;
  }
}

@mixin medium-mf() {
  @media screen and (min-width: $mqMedium + 1) {
    @content;
  }
}

@mixin break() {
  @media screen and (max-width: $mqBreak) {
    @content;
  }
}

@mixin break-mf() {
  @media screen and (min-width: $mqBreak + 1) {
    @content;
  }
}

@mixin break-sm() {
  @media screen and (max-width: $mqBreakSm - 1) {
    @content;
  }
}


@mixin tablet-mf() {
  @media screen and (min-width: $mqTablet+1) {
    @content;
  }
}

@mixin tablet() {
  @media screen and (max-width: $mqTablet) {
    @content;
  }
}

@mixin tablet-sm() {
  @media screen and (max-width: $mqTablet - 1) {
    @content;
  }
}

@mixin mobile() {
  @media screen and (max-width: $mqMobile) {
    @content;
  }
}

@mixin mobile-up() {
  @media screen and (min-width: $mqMobile) {
    @content;
  }
}

@mixin mobile-sm() {
  @media screen and (max-width: $mqMobile - 1) {
    @content;
  }
}

@mixin mobile-xs() {
  @media screen and (max-width: $mqMobileXs) {
    @content;
  }
}
